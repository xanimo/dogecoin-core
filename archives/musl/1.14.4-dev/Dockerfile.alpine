# Build stage for BerkeleyDB
FROM alpine as berkeleydb

ENV BERKELEYDB_VERSION=5.1.29.NC
ENV BERKELEYDB_SHA256SUM=08238e59736d1aacdd47cfb8e68684c695516c37f4fbe1b8267dde58dc3a576c

RUN sed -i 's/http\:\/\/dl-cdn.alpinelinux.org/https\:\/\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories
RUN apk --no-cache add autoconf
RUN apk --no-cache add automake
RUN apk --no-cache add alpine-sdk

ADD http://download.oracle.com/berkeley-db/db-${BERKELEYDB_VERSION}.tar.gz ./
RUN \
  echo "${BERKELEYDB_SHA256SUM}  db-${BERKELEYDB_VERSION}.tar.gz" | sha256sum -c - && \
  tar xf db-${BERKELEYDB_VERSION}.tar.gz

WORKDIR /db-${BERKELEYDB_VERSION}/build_unix

RUN \
sed s/__atomic_compare_exchange/__atomic_compare_exchange_db/g -i ../src/dbinc/atomic.h

RUN ../dist/configure --enable-cxx --disable-shared --with-pic --prefix=/usr/local/bdb
RUN make -j4
RUN make install
RUN rm -rf ${BERKELEYDB_PREFIX}/docs

FROM alpine:latest AS dogecoin-core

LABEL maintainer.0="xanimo (@xanimo)"

ENV LANG en_US.UTF-8
ENV LANGUAGE en_US:en
ENV LC_ALL en_US.UTF-8
ENV DOGECOIN_DATA=/home/dogecoin/.dogecoin
ENV DOGECOIN_PREFIX=/opt/dogecoin-1.14.4-dev
ENV DOGECOIN_VERSION=1.14.4-dev
ENV PATH=${DOGECOIN_PREFIX}/bin:$PATH

COPY --from=berkeleydb /usr/local/bdb /usr/local/bdb

RUN apk add git \
    && git clone -b ${DOGECOIN_VERSION} https://github.com/xanimo/dogecoin.git /dogecoin-${DOGECOIN_VERSION}

WORKDIR /dogecoin-${DOGECOIN_VERSION}

RUN git checkout ${DOGECOIN_VERSION} && git reset --hard f12e2a6ff7d7e2713ac0d461ad63431bcf78cae5

RUN apk add autoconf automake bash bison build-base curl libtool libxkbcommon-x11 linux-headers make pkgconf python3 xz
RUN sed -i '/AC_PREREQ/a\AR_FLAGS=cr' src/univalue/configure.ac
RUN sed -i '/AX_PROG_CC_FOR_BUILD/a\AR_FLAGS=cr' src/secp256k1/configure.ac
RUN sed -i s:sys/fcntl.h:fcntl.h: src/compat.h
RUN make HOST=x86_64-pc-linux-musl NO_QT=1 -C depends
RUN ./autogen.sh
RUN CONFIG_SITE=$PWD/depends/x86_64-pc-linux-musl/share/config.site ./configure \
    --build=x86_64-pc-linux-gnu \
    --host=x86_64-pc-linux-musl \
    --target=x86_64-pc-linux-musl \
    --prefix=${DOGECOIN_PREFIX} \
    --mandir=/usr/share/man \
    --with-incompatible-bdb \
    --disable-ccache \
    --disable-maintainer-mode \
    --disable-dependency-tracking \
    --enable-reduce-exports \
    --disable-bench \
    --disable-gui-tests \
    --without-gui \
    --with-libs \
    --with-daemon \
    --with-utils \
      CFLAGS="-g0 -Os -static --static -fPIC" \
      CPPFLAGS='-I/usr/local/bdb/include/' \
      CXXFLAGS="-g0 -Os -static --static -fPIC -fvisibility=hidden" \
      LDFLAGS='-L/usr/local/bdb/lib/ -s -static-libgcc -static-libstdc++ -Wl,-O2'
RUN make -j4
RUN make check -j4
RUN make install
RUN strip ${DOGECOIN_PREFIX}/bin/dogecoin-cli
RUN strip ${DOGECOIN_PREFIX}/bin/dogecoin-tx
RUN strip ${DOGECOIN_PREFIX}/bin/dogecoind
RUN strip ${DOGECOIN_PREFIX}/lib/libdogecoinconsensus.a

# Build stage for compiled artifacts
FROM alpine

LABEL maintainer.0="xanimo (@xanimo)"

ENV DOGECOIN_VERSION=1.14.4-dev
ENV DOGECOIN_DATA=/home/dogecoin/.dogecoin
ENV DOGECOIN_PREFIX=/opt/dogecoin-${DOGECOIN_VERSION}
ENV PATH=${DOGECOIN_PREFIX}/bin:$PATH

RUN adduser -S dogecoin
RUN sed -i 's/http\:\/\/dl-cdn.alpinelinux.org/https\:\/\/alpine.global.ssl.fastly.net/g' /etc/apk/repositories
RUN apk --no-cache add \
  boost-filesystem \
  boost-system \
  boost-thread \
  libevent-dev \
  libzmq \
  su-exec 
  
COPY --from=dogecoin-core /opt /opt

COPY docker-entrypoint.sh /entrypoint.sh

RUN ["chmod", "+x", "/entrypoint.sh"]

VOLUME ["/home/dogecoin/.dogecoin"]

EXPOSE 22555 22556 44555 44556 18444 9050 9051

ENTRYPOINT ["/entrypoint.sh"]

RUN dogecoind -version | grep "Dogecoin Core Daemon version v${DOGECOIN_VERSION}"

CMD ["dogecoind"]
